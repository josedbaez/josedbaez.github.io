<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jose Dominguez</title>
  
  <subtitle>C#, .net, sitecore &amp; some other stuff</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://josedbaez.com/"/>
  <updated>2018-04-02T16:31:21.325Z</updated>
  <id>http://josedbaez.com/</id>
  
  <author>
    <name>José Domínguez</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Log in to sitecore 9 editor using Okta provider</title>
    <link href="http://josedbaez.com/2018/04/sitecore9-okta-login/"/>
    <id>http://josedbaez.com/2018/04/sitecore9-okta-login/</id>
    <published>2018-04-02T00:00:00.000Z</published>
    <updated>2018-04-02T16:31:21.325Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><img class="hero-img" src="/images/sitecore9-okta.jpg" alt="Sitecore 9 Okta provider"></h2><p>How to implement federated authentication on sitecore 9 to allow content editors log in to sitecore using their okta accounts.<br><a id="more"></a></p><p><em>Versions used: Sitecore Experience Platform 9.0 rev. 171219 (9.0 Update-1).</em></p><p>This post is a continuation of my <a href="http://josedbaez.com/2018/03/sitecore9-sso/">previous post</a>. Instead of logging visitors in using federated authentication, in this post I’ll show how to implement Okta authentication to log in to sitecore editor. It’s an udpated version of my <a href="http://josedbaez.com/2017/09/sitecore-okta-login/">sitecore 8 okta post</a>. <a href="https://github.com/josedbaez/sitecore9sso" target="_blank" rel="noopener">Source code here.</a></p><p>The good news is things have changed and the implementation is easier and shorter than before. I won’t be going into details on how to configure the application in Okta because it hasn’t changed much since last time. <a href="http://josedbaez.com/2017/09/sitecore-okta-login/#OKTA-application-configuration">Click here</a> for previous configuration. </p><p>Please see my <a href="http://josedbaez.com/2018/03/sitecore9-sso/">previous post</a> or <a href="https://github.com/josedbaez/sitecore9sso/blob/master/App_Config/Include/SSO/SitecoreSSO.config" target="_blank" rel="noopener">download here</a> to enable required settings and add default services.</p><h2 id="Okta-middleware-provider-implementation"><a href="#Okta-middleware-provider-implementation" class="headerlink" title="Okta middleware/provider implementation"></a>Okta middleware/provider implementation</h2><p>The following code is based on the <a href="https://github.com/oktadeveloper/okta-aspnet-mvc-example/blob/master/OktaAspNetExample/Startup.cs" target="_blank" rel="noopener">sample provided</a> by Okta.</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">OktaIdentityProvider</span> : <span class="title">IdentityProvidersProcessor</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">string</span> IdentityProviderName =&gt; <span class="string">"Okta"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="keyword">string</span> ClientId = <span class="string">"your clientid here"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="keyword">string</span> ClientSecret = <span class="string">"your ClientSecret here"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="keyword">string</span> Authority = <span class="string">"your okta site URL here"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="keyword">string</span> OauthTokenEndpoint = <span class="string">"/oauth2/v1/token"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="keyword">string</span> OauthUserInfoEndpoint = <span class="string">"/oauth2/v1/userinfo"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="keyword">string</span> OAuthRedirectUri = <span class="string">"http://sc9xp0.sc/identity/externallogincallback"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="keyword">string</span> OpenIdScope = OpenIdConnectScope.OpenIdProfile + <span class="string">" email"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> IdentityProvider IdentityProvider &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">OktaIdentityProvider</span>(<span class="params">FederatedAuthenticationConfiguration federatedAuthenticationConfiguration</span>)</span></span><br><span class="line"><span class="function">        : <span class="title">base</span>(<span class="params">federatedAuthenticationConfiguration</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">ProcessCore</span>(<span class="params">IdentityProvidersArgs args</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Assert.ArgumentNotNull(args, <span class="string">"args"</span>);</span><br><span class="line">        IdentityProvider = <span class="keyword">this</span>.GetIdentityProvider();</span><br><span class="line">        <span class="keyword">var</span> options = <span class="keyword">new</span> OpenIdConnectAuthenticationOptions</span><br><span class="line">        &#123;</span><br><span class="line">            ClientId = ClientId,</span><br><span class="line">            ClientSecret = ClientSecret,</span><br><span class="line">            Authority = Authority,</span><br><span class="line">            RedirectUri = OAuthRedirectUri,</span><br><span class="line">            ResponseType = OpenIdConnectResponseType.CodeIdToken,</span><br><span class="line">            Scope = OpenIdScope,</span><br><span class="line">            AuthenticationType = IdentityProvider.Name,</span><br><span class="line">            TokenValidationParameters = <span class="keyword">new</span> TokenValidationParameters</span><br><span class="line">            &#123;</span><br><span class="line">                NameClaimType = <span class="string">"name"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            Notifications = <span class="keyword">new</span> OpenIdConnectAuthenticationNotifications</span><br><span class="line">            &#123;</span><br><span class="line">                AuthorizationCodeReceived = ProcessAuthorizationCodeReceived,</span><br><span class="line">                RedirectToIdentityProvider = n =&gt;</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// If signing out, add the id_token_hint</span></span><br><span class="line">                    <span class="keyword">if</span> (n.ProtocolMessage.RequestType == Microsoft.IdentityModel.Protocols.OpenIdConnectRequestType.LogoutRequest )</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">var</span> idTokenClaim = n.OwinContext.Authentication.User.FindFirst(<span class="string">"id_token"</span>);</span><br><span class="line">                        <span class="keyword">if</span> (idTokenClaim != <span class="literal">null</span>)</span><br><span class="line">                            n.ProtocolMessage.IdTokenHint = idTokenClaim.Value;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> Task.CompletedTask;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        args.App.UseOpenIdConnectAuthentication(options);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">async</span> Task <span class="title">ProcessAuthorizationCodeReceived</span>(<span class="params">AuthorizationCodeReceivedNotification notification</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// Exchange code for access and ID tokens</span></span><br><span class="line">        <span class="keyword">var</span> tokenClient = <span class="keyword">new</span> TokenClient(Authority + OauthTokenEndpoint, ClientId, ClientSecret);</span><br><span class="line">        <span class="keyword">var</span> tokenResponse = <span class="keyword">await</span> tokenClient.RequestAuthorizationCodeAsync(notification.Code, notification.RedirectUri);</span><br><span class="line">        <span class="keyword">if</span> (tokenResponse.IsError)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(tokenResponse.Error);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> userInfoClient = <span class="keyword">new</span> UserInfoClient(Authority + OauthUserInfoEndpoint);</span><br><span class="line">        <span class="keyword">var</span> userInfoResponse = <span class="keyword">await</span> userInfoClient.GetAsync(tokenResponse.AccessToken);</span><br><span class="line">        <span class="keyword">var</span> claims = <span class="keyword">new</span> List&lt;Claim&gt;();</span><br><span class="line">        claims.AddRange(userInfoResponse.Claims);</span><br><span class="line">        claims.Add(<span class="keyword">new</span> Claim(<span class="string">"id_token"</span>, tokenResponse.IdentityToken));</span><br><span class="line">        claims.Add(<span class="keyword">new</span> Claim(<span class="string">"access_token"</span>, tokenResponse.AccessToken));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">string</span>.IsNullOrEmpty(tokenResponse.RefreshToken))</span><br><span class="line">            claims.Add(<span class="keyword">new</span> Claim(<span class="string">"refresh_token"</span>, tokenResponse.RefreshToken));</span><br><span class="line"></span><br><span class="line">        notification.AuthenticationTicket.Identity.AddClaims(claims);</span><br><span class="line">        notification.AuthenticationTicket.Identity.ApplyClaimsTransformations(<span class="keyword">new</span> TransformationContext(<span class="keyword">this</span>.FederatedAuthenticationConfiguration, IdentityProvider));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>We first create our <code>OpenIdConnectAuthenticationOptions</code> object and set the settings required by the middleware to know who to communicate to and Okta’s settings so it allows requests from our application.</p><p><code>AuthenticationType</code> is very important because, after authentication is triggered, a 401 status code will be set to the response and each owin middleware will inspect and decide if it should action the request by matching its <code>AuthenticationType</code>.</p><p>Remember <code>Scope</code> defines the claims we are requesting from Okta. We are setting it to the enum <code>OpenIdConnectScope.OpenIdProfile</code> plus <code>email</code>. Sitecore requires email by default. See <a href="http://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims" target="_blank" rel="noopener">OpenId specification</a> for more info on scope values. <code>ResponseType</code> determines the authorization processing flow to be used. See <a href="http://openid.net/specs/openid-connect-core-1_0.html#HybridAuthRequest" target="_blank" rel="noopener">OpenId specification</a> for more info on scope authentication request.</p><p><code>/identity/externallogincallback</code> is the callback URL sitecore creates to process external logins after they have been authenticated on the providers.</p><p>Our <code>AuthorizationCodeReceived</code> task <code>ProcessAuthorizationCodeReceived</code> is making sure the token is valid and retrieving claims to be added to the context. It uses sitecore’s <code>ApplyClaimsTransformations</code> helper to map claims according to configuration set in config file.</p><h2 id="Okta-provider-configuration"><a href="#Okta-provider-configuration" class="headerlink" title="Okta provider configuration"></a>Okta provider configuration</h2><p>The configuration is pretty much the same as the <a href="http://josedbaez.com/2018/03/sitecore9-sso/#Enable-and-configure-providers">previous post</a> so I won’t go into any details. You can get it <a href="https://github.com/josedbaez/sitecore9sso/blob/master/App_Config/Include/SSO/SitecoreSSO.Providers.Editors.config" target="_blank" rel="noopener">here</a>. Do not forget to include <a href="https://github.com/josedbaez/sitecore9sso/blob/master/App_Config/Include/SSO/SitecoreSSO.config" target="_blank" rel="noopener">main configuration file</a>.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">xmlns:patch</span>=<span class="string">"http://www.sitecore.net/xmlconfig/"</span> <span class="attr">xmlns:role</span>=<span class="string">"http://www.sitecore.net/xmlconfig/role/"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">sitecore</span> <span class="attr">role:require</span>=<span class="string">"Standalone or ContentDelivery or ContentManagement"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pipelines</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">owin.identityProviders</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">processor</span> <span class="attr">type</span>=<span class="string">"Sitecore9SSO.Pipelines.IdentityProviders.OktaIdentityProvider, Sitecore9SSO"</span> <span class="attr">resolve</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">owin.identityProviders</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pipelines</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">federatedAuthentication</span> <span class="attr">type</span>=<span class="string">"Sitecore.Owin.Authentication.Configuration.FederatedAuthenticationConfiguration, Sitecore.Owin.Authentication"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">identityProvidersPerSites</span> <span class="attr">hint</span>=<span class="string">"list:AddIdentityProvidersPerSites"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapEntry</span> <span class="attr">name</span>=<span class="string">"editors"</span> <span class="attr">type</span>=<span class="string">"Sitecore.Owin.Authentication.Collections.IdentityProvidersPerSitesMapEntry, Sitecore.Owin.Authentication"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">sites</span> <span class="attr">hint</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">site</span>&gt;</span>shell<span class="tag">&lt;/<span class="name">site</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">site</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">site</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">sites</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">identityProviders</span> <span class="attr">hint</span>=<span class="string">"list:AddIdentityProvider"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">identityProvider</span> <span class="attr">ref</span>=<span class="string">"federatedAuthentication/identityProviders/identityProvider[@id='Okta']"</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">identityProviders</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">externalUserBuilder</span> <span class="attr">type</span>=<span class="string">"Sitecore.Owin.Authentication.Services.DefaultExternalUserBuilder, Sitecore.Owin.Authentication"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param</span> <span class="attr">desc</span>=<span class="string">"isPersistentUser"</span>&gt;</span>false<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">externalUserBuilder</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mapEntry</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">identityProvidersPerSites</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">identityProviders</span> <span class="attr">hint</span>=<span class="string">"list:AddIdentityProvider"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">identityProvider</span> <span class="attr">id</span>=<span class="string">"Okta"</span> <span class="attr">type</span>=<span class="string">"Sitecore.Owin.Authentication.Configuration.DefaultIdentityProvider, Sitecore.Owin.Authentication"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">param</span> <span class="attr">desc</span>=<span class="string">"name"</span>&gt;</span>$(id)<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">param</span> <span class="attr">desc</span>=<span class="string">"domainManager"</span> <span class="attr">type</span>=<span class="string">"Sitecore.Abstractions.BaseDomainManager"</span> <span class="attr">resolve</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">caption</span>&gt;</span>Log in with Okta<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">icon</span>&gt;</span>/assets/okta.png<span class="tag">&lt;/<span class="name">icon</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">domain</span>&gt;</span>sitecore<span class="tag">&lt;/<span class="name">domain</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">transformations</span> <span class="attr">hint</span>=<span class="string">"list:AddTransformation"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">transformation</span> <span class="attr">name</span>=<span class="string">"map role to idp"</span> <span class="attr">type</span>=<span class="string">"Sitecore.Owin.Authentication.Services.DefaultTransformation, Sitecore.Owin.Authentication"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">sources</span> <span class="attr">hint</span>=<span class="string">"raw:AddSource"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">claim</span> <span class="attr">name</span>=<span class="string">"idp"</span> <span class="attr">value</span>=<span class="string">"Okta"</span> /&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">sources</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">targets</span> <span class="attr">hint</span>=<span class="string">"raw:AddTarget"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">claim</span> <span class="attr">name</span>=<span class="string">"http://schemas.microsoft.com/ws/2008/06/identity/claims/role"</span> <span class="attr">value</span>=<span class="string">"sitecore\Developer"</span> /&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">targets</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">keepSource</span>&gt;</span>true<span class="tag">&lt;/<span class="name">keepSource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">transformation</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">transformation</span> <span class="attr">name</span>=<span class="string">"fullname"</span> <span class="attr">type</span>=<span class="string">"Sitecore.Owin.Authentication.Services.DefaultTransformation,Sitecore.Owin.Authentication"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">sources</span> <span class="attr">hint</span>=<span class="string">"raw:AddSource"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">claim</span> <span class="attr">name</span>=<span class="string">"name"</span> /&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">sources</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">targets</span> <span class="attr">hint</span>=<span class="string">"raw:AddTarget"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">claim</span> <span class="attr">name</span>=<span class="string">"FullName"</span> /&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">targets</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">transformation</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;/<span class="name">transformations</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">identityProvider</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">identityProviders</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">federatedAuthentication</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">sitecore</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>====================<br>References:<br><a href="https://coding.abel.nu/2014/06/understanding-the-owin-external-authentication-pipeline/" target="_blank" rel="noopener">https://coding.abel.nu/2014/06/understanding-the-owin-external-authentication-pipeline/</a><br><a href="https://dzone.com/articles/understanding-owin-external" target="_blank" rel="noopener">https://dzone.com/articles/understanding-owin-external</a><br><a href="http://openid.net/specs/openid-connect-core-1_0.html" target="_blank" rel="noopener">http://openid.net/specs/openid-connect-core-1_0.html</a><br><a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-protocols-openid-connect-code" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-protocols-openid-connect-code</a></p><hr><p>Please let me know what you think and/or if you can spot any errors.<br><em>/eom</em></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img class=&quot;hero-img&quot; src=&quot;/images/sitecore9-okta.jpg&quot; alt=&quot;Sitecore 9 Okta provider&quot;&gt;&lt;/h2&gt;&lt;p&gt;How to implement federated authentication on sitecore 9 to allow content editors log in to sitecore using their okta accounts.&lt;br&gt;
    
    </summary>
    
      <category term="Sitecore" scheme="http://josedbaez.com/categories/Sitecore/"/>
    
      <category term="Authentication" scheme="http://josedbaez.com/categories/Sitecore/Authentication/"/>
    
    
      <category term="openid" scheme="http://josedbaez.com/tags/openid/"/>
    
      <category term="okta" scheme="http://josedbaez.com/tags/okta/"/>
    
      <category term="authentication" scheme="http://josedbaez.com/tags/authentication/"/>
    
      <category term="sso" scheme="http://josedbaez.com/tags/sso/"/>
    
  </entry>
  
  <entry>
    <title>Allows users to log in to a Sitecore 9 site using federated authentication</title>
    <link href="http://josedbaez.com/2018/03/sitecore9-sso/"/>
    <id>http://josedbaez.com/2018/03/sitecore9-sso/</id>
    <published>2018-03-16T00:00:00.000Z</published>
    <updated>2018-06-04T11:13:58.359Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><img class="hero-img" src="/images/sitecore9-sso.jpg" alt="Sitecore 9 SSO"></h2><p>How to implement federated authentication on sitecore 9 to allow visitors to log in to your site using their google or facebook accounts.<br><a id="more"></a></p><p><em>Versions used: Sitecore Experience Platform 9.0 rev. 171219 (9.0 Update-1).</em></p><p><strong>Update/Warning:</strong><br>Updated code so it passes the IdentityProvider name to the middleware so you can use whatever name you want instead of default one. <code>AuthenticationType = IdentityProvider.Name</code>.</p><p>On a <a href="http://josedbaez.com/2017/09/sitecore-okta-login/">previous post</a> I explained how to implement federated authentication on Sitecore 8 (using Okta). Things have changed on sitecore 9 and the implementation is easier than back then.</p><p>Sitecore 9 comes with an OWIN implementation to delegate authentication to other providers. Most of the job required to achieve federated authentication is through configuration files. In this post I will outline how to implement federated authentication with Facebook and Google so visitors can log in to your sitecore 9 site. <a href="https://github.com/josedbaez/sitecore9sso" target="_blank" rel="noopener">Source code here.</a></p><p>Sitecore will automatically render redirect buttons on the login page if you add your provider to <code>admin</code> and <code>shell</code> sites. As we want our providers to handle the <code>website</code> site instead, we will create a rendering to render the redirect links on the <code>NoAccessUrl</code> page.</p><p>The steps to implement federated authentication are:</p><ul><li>Configure third-party (facebook and google) providers</li><li>Enable and configure providers</li><li>Create providers’ processors to map claims received to Sitecore user properties and roles</li><li>Create rendering to render login links and patch <code>NoAccessUrl</code> setting</li><li>Set the <code>authentication mode</code> to <code>None</code> in the Web.config <authentication mode="None"></authentication></li><li>Remove the FormsAuthentication module, like: <code>&lt;system.webServer&gt;&lt;modules&gt;&lt;remove name=&quot;FormsAuthentication&quot; /&gt;</code></li></ul><h2 id="Configure-third-party-facebook-and-google-providers"><a href="#Configure-third-party-facebook-and-google-providers" class="headerlink" title="Configure third-party (facebook and google) providers"></a>Configure third-party (facebook and google) providers</h2><p>Follow the following links to create and configure your applications: <a href="https://docs.microsoft.com/en-us/aspnet/core/security/authentication/social/facebook-logins?tabs=aspnetcore2x" target="_blank" rel="noopener">facebook</a> and <a href="https://docs.microsoft.com/en-us/aspnet/core/security/authentication/social/google-logins?tabs=aspnetcore2x" target="_blank" rel="noopener">google</a>.</p><p><em>IMPORTANT: Redirects URIs should be set to <a href="http://YOURSITE/signin-facebook" target="_blank" rel="noopener">http://YOURSITE/signin-facebook</a> and <a href="http://YOURSITE/signin-google" target="_blank" rel="noopener">http://YOURSITE/signin-google</a> respectively. This url is automatically generated by the middlewares being used here.</em></p><h2 id="Enable-and-configure-providers"><a href="#Enable-and-configure-providers" class="headerlink" title="Enable and configure providers"></a>Enable and configure providers</h2><p>First, enable federated authentication and add default services. A configuration sample file comes with sitecore, it sits under: <code>\App_Config\Include\Examples\Sitecore.Owin.Authentication.Enabler.config.example</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">xmlns:patch</span>=<span class="string">"http://www.sitecore.net/xmlconfig/"</span> <span class="attr">xmlns:role</span>=<span class="string">"http://www.sitecore.net/xmlconfig/role/"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">sitecore</span> <span class="attr">role:require</span>=<span class="string">"Standalone or ContentDelivery or ContentManagement"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"FederatedAuthentication.Enabled"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">patch:attribute</span> <span class="attr">name</span>=<span class="string">"value"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">patch:attribute</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">setting</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"NoAccessUrl"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">patch:attribute</span> <span class="attr">name</span>=<span class="string">"value"</span>&gt;</span>/no-access<span class="tag">&lt;/<span class="name">patch:attribute</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">setting</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">services</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">register</span> <span class="attr">serviceType</span>=<span class="string">"Sitecore.Abstractions.BaseAuthenticationManager, Sitecore.Kernel"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">implementationType</span>=<span class="string">"Sitecore.Owin.Authentication.Security.AuthenticationManager, Sitecore.Owin.Authentication"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">lifetime</span>=<span class="string">"Singleton"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">register</span> <span class="attr">serviceType</span>=<span class="string">"Sitecore.Abstractions.BaseTicketManager, Sitecore.Kernel"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">implementationType</span>=<span class="string">"Sitecore.Owin.Authentication.Security.TicketManager, Sitecore.Owin.Authentication"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">lifetime</span>=<span class="string">"Singleton"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">register</span> <span class="attr">serviceType</span>=<span class="string">"Sitecore.Abstractions.BasePreviewManager, Sitecore.Kernel"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">implementationType</span>=<span class="string">"Sitecore.Owin.Authentication.Publishing.PreviewManager, Sitecore.Owin.Authentication"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">lifetime</span>=<span class="string">"Singleton"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">services</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">sitecore</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Note <code>NoAccessUrl</code> is being set to <code>/no-access</code>. This item needs to exist in sitecore and it’s where the rendering that will generate the login links needs to be added to.</p><p>Then, let’s add our providers and transformations. I’ll just show facebook’s <code>identityProvider</code> as google’s is pretty much the same. See full config <a href="https://github.com/josedbaez/sitecore9sso/blob/master/src/App_Config/Include/SSO/SitecoreSSO.Providers.config" target="_blank" rel="noopener">here.</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">xmlns:patch</span>=<span class="string">"http://www.sitecore.net/xmlconfig/"</span> <span class="attr">xmlns:role</span>=<span class="string">"http://www.sitecore.net/xmlconfig/role/"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">sitecore</span> <span class="attr">role:require</span>=<span class="string">"Standalone or ContentDelivery or ContentManagement"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pipelines</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">owin.identityProviders</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">processor</span> <span class="attr">type</span>=<span class="string">"Sitecore9SSO.Pipelines.IdentityProviders.FacebookIdentityProvider, Sitecore9SSO"</span> <span class="attr">resolve</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">processor</span> <span class="attr">type</span>=<span class="string">"Sitecore9SSO.Pipelines.IdentityProviders.GoogleIdentityProvider, Sitecore9SSO"</span> <span class="attr">resolve</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">owin.identityProviders</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pipelines</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">federatedAuthentication</span> <span class="attr">type</span>=<span class="string">"Sitecore.Owin.Authentication.Configuration.FederatedAuthenticationConfiguration, Sitecore.Owin.Authentication"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">identityProvidersPerSites</span> <span class="attr">hint</span>=<span class="string">"list:AddIdentityProvidersPerSites"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapEntry</span> <span class="attr">name</span>=<span class="string">"all"</span> <span class="attr">type</span>=<span class="string">"Sitecore.Owin.Authentication.Collections.IdentityProvidersPerSitesMapEntry, Sitecore.Owin.Authentication"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">sites</span> <span class="attr">hint</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">site</span>&gt;</span>website<span class="tag">&lt;/<span class="name">site</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">sites</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">identityProviders</span> <span class="attr">hint</span>=<span class="string">"list:AddIdentityProvider"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">identityProvider</span> <span class="attr">ref</span>=<span class="string">"federatedAuthentication/identityProviders/identityProvider[@id='Facebook']"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">identityProvider</span> <span class="attr">ref</span>=<span class="string">"federatedAuthentication/identityProviders/identityProvider[@id='Google']"</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">identityProviders</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">externalUserBuilder</span> <span class="attr">type</span>=<span class="string">"Sitecore.Owin.Authentication.Services.DefaultExternalUserBuilder, Sitecore.Owin.Authentication"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param</span> <span class="attr">desc</span>=<span class="string">"isPersistentUser"</span>&gt;</span>false<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">externalUserBuilder</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mapEntry</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">identityProvidersPerSites</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">identityProviders</span> <span class="attr">hint</span>=<span class="string">"list:AddIdentityProvider"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">identityProvider</span> <span class="attr">id</span>=<span class="string">"Facebook"</span> <span class="attr">type</span>=<span class="string">"Sitecore.Owin.Authentication.Configuration.DefaultIdentityProvider, Sitecore.Owin.Authentication"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">param</span> <span class="attr">desc</span>=<span class="string">"name"</span>&gt;</span>$(id)<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">param</span> <span class="attr">desc</span>=<span class="string">"domainManager"</span> <span class="attr">type</span>=<span class="string">"Sitecore.Abstractions.BaseDomainManager"</span> <span class="attr">resolve</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">caption</span>&gt;</span>Log in with Facebook<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">icon</span>&gt;</span>/assets/fb.png<span class="tag">&lt;/<span class="name">icon</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">domain</span>&gt;</span>sitecore<span class="tag">&lt;/<span class="name">domain</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">transformations</span> <span class="attr">hint</span>=<span class="string">"list:AddTransformation"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transformation</span> <span class="attr">name</span>=<span class="string">"map role to idp"</span> <span class="attr">type</span>=<span class="string">"Sitecore.Owin.Authentication.Services.DefaultTransformation, Sitecore.Owin.Authentication"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">sources</span> <span class="attr">hint</span>=<span class="string">"raw:AddSource"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">claim</span> <span class="attr">name</span>=<span class="string">"idp"</span> <span class="attr">value</span>=<span class="string">"Facebook"</span> /&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">sources</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">targets</span> <span class="attr">hint</span>=<span class="string">"raw:AddTarget"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">claim</span> <span class="attr">name</span>=<span class="string">"http://schemas.microsoft.com/ws/2008/06/identity/claims/role"</span> <span class="attr">value</span>=<span class="string">"sitecore\Developer"</span> /&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">targets</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">keepSource</span>&gt;</span>true<span class="tag">&lt;/<span class="name">keepSource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">transformation</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">transformation</span> <span class="attr">name</span>=<span class="string">"fullname"</span> <span class="attr">type</span>=<span class="string">"Sitecore.Owin.Authentication.Services.DefaultTransformation,Sitecore.Owin.Authentication"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">sources</span> <span class="attr">hint</span>=<span class="string">"raw:AddSource"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">claim</span> <span class="attr">name</span>=<span class="string">"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name"</span> /&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">sources</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">targets</span> <span class="attr">hint</span>=<span class="string">"raw:AddTarget"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">claim</span> <span class="attr">name</span>=<span class="string">"FullName"</span> /&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">targets</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">transformation</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;/<span class="name">transformations</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">identityProvider</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">identityProvider</span> <span class="attr">id</span>=<span class="string">"Google"</span> <span class="attr">type</span>=<span class="string">"Sitecore.Owin.Authentication.Configuration.DefaultIdentityProvider, Sitecore.Owin.Authentication"</span>&gt;</span></span><br><span class="line">          ...</span><br><span class="line">          ...</span><br><span class="line">        <span class="tag">&lt;/<span class="name">identityProvider</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">identityProviders</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">propertyInitializer</span> <span class="attr">type</span>=<span class="string">"Sitecore.Owin.Authentication.Services.PropertyInitializer, Sitecore.Owin.Authentication"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- global mappings go here --&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">propertyInitializer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">federatedAuthentication</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">sitecore</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>The DefaultExternalUserBuilder class creates a sequence of user names for a given external user name. It then uses the first of these names that does not already exist in Sitecore. The values in the sequence depend only on the external username and the Sitecore domain configured for the given identity provider. <sup><a href="#default-external-user-builder">1</a></sup></p></blockquote><p>If you want to use another claim from the user instead, and you know it’s going to be unique, you can create your own processor and use whatever claim you like. Example below:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">public class CustomExternalUserBuilder : Sitecore.Owin.Authentication.Services.DefaultExternalUserBuilder</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CustomExternalUserBuilder</span>(<span class="params"><span class="keyword">bool</span> isPersistentUser</span>)</span></span><br><span class="line"><span class="function">        : <span class="title">base</span>(<span class="params">isPersistentUser</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CustomExternalUserBuilder</span>(<span class="params"><span class="keyword">string</span> isPersistentUser</span>)</span></span><br><span class="line"><span class="function">        : <span class="title">base</span>(<span class="params"><span class="keyword">bool</span>.Parse(isPersistentUser</span>))</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">string</span> <span class="title">CreateUniqueUserName</span>(<span class="params">UserManager&lt;ApplicationUser&gt; userManager, ExternalLoginInfo externalLoginInfo</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Assert.ArgumentNotNull(userManager, <span class="string">"userManager"</span>);</span><br><span class="line">        Assert.ArgumentNotNull(externalLoginInfo, <span class="string">"externalLoginInfo"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> externalLoginInfo.ExternalIdentity.FindFirstValue(<span class="string">"FullName"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Federated authentication supports two types of users:<br>Persistent users – Sitecore stores information about persistent users (login name, email address, and so on) in the database, and uses the Membership provider by default<br>Virtual users – information about these users is stored in the session and disappears after the session is over. <sup><a href="#authentication-types">2</a></sup></p></blockquote><p>The transformations above are doing 2 simple things. The first one <code>map role to idp</code> is adding the role <code>sitecore\Developer</code> to the user when its <code>idp</code> claim is equal to <code>Facebook</code>. This claim is added automatically by sitecore because of the shared claim transformation <code>setIdpClaim</code> under <code>&lt;sharedTransformations&gt;</code> in <code>Sitecore.Owin.Authentication.config</code>.</p><p>The other one, <code>fullname</code>, is just transforming the claim to <code>FullName</code> so you can retrieve easier programmatically (this is just an example and not actually being used).</p><p>The identity provider <code>id</code> must match the <code>IdentityProviderName</code> in your provider processor.</p><h2 id="Create-providers’-processors-to-map-claims-received-to-Sitecore-user-properties-and-roles"><a href="#Create-providers’-processors-to-map-claims-received-to-Sitecore-user-properties-and-roles" class="headerlink" title="Create providers’ processors to map claims received to Sitecore user properties and roles"></a>Create providers’ processors to map claims received to Sitecore user properties and roles</h2><p>Create a processor (per provider) that inherits from <code>IdentityProvidersProcessor</code> and maps the claims received.</p><p>This implementation uses middlewares created by Microsoft. Nuget packages: <a href="https://www.nuget.org/packages/Microsoft.Owin.Security.Google/" target="_blank" rel="noopener">google,</a> <a href="https://www.nuget.org/packages/Microsoft.Owin.Security.Facebook/" target="_blank" rel="noopener">facebook</a>. Again, only showing facebook’s implementation as google’s is very similar. You can find full source code <a href="https://github.com/josedbaez/sitecore9sso/tree/master/Pipelines/IdentityProviders" target="_blank" rel="noopener">here</a>.</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">FacebookIdentityProvider</span> : <span class="title">IdentityProvidersProcessor</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">string</span> IdentityProviderName =&gt; <span class="string">"Facebook"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="keyword">string</span> AppId = <span class="string">"app id from facebook app"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="keyword">string</span> AppSecret = <span class="string">"app secret from facebook app"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FacebookIdentityProvider</span>(<span class="params">FederatedAuthenticationConfiguration federatedAuthenticationConfiguration</span>)</span></span><br><span class="line"><span class="function">        : <span class="title">base</span>(<span class="params">federatedAuthenticationConfiguration</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">ProcessCore</span>(<span class="params">IdentityProvidersArgs args</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Assert.ArgumentNotNull(args, <span class="string">"args"</span>);</span><br><span class="line">        IdentityProvider identityProvider = <span class="keyword">this</span>.GetIdentityProvider();</span><br><span class="line">        <span class="keyword">var</span> provider = <span class="keyword">new</span> Microsoft.Owin.Security.Facebook.FacebookAuthenticationProvider</span><br><span class="line">        &#123;</span><br><span class="line">            OnAuthenticated = (context) =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//map claims</span></span><br><span class="line">                context.Identity.ApplyClaimsTransformations(<span class="keyword">new</span> TransformationContext(<span class="keyword">this</span>.FederatedAuthenticationConfiguration, identityProvider));</span><br><span class="line">                <span class="keyword">return</span> Task.CompletedTask;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> fbAuthOptions = <span class="keyword">new</span> Microsoft.Owin.Security.Facebook.FacebookAuthenticationOptions</span><br><span class="line">        &#123;</span><br><span class="line">            AppId = AppId,</span><br><span class="line">            AppSecret = AppSecret,</span><br><span class="line">            Provider = provider,</span><br><span class="line">            AuthenticationType = IdentityProvider.Name</span><br><span class="line">        &#125;;</span><br><span class="line">        args.App.UseFacebookAuthentication(fbAuthOptions);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The code is straight forward and microsoft’s middleware does most of the work. Once the user is authenticated and sent back to our site, we need to map the claims. We are doing this with sitecore’s <code>ApplyClaimsTransformations</code> helper. This will map the claims and transform them according to the transformations defined in our configuration file.</p><p>Do not forget to update <code>AppId</code> and <code>AppSecret</code>.</p><h2 id="Create-rendering-to-render-login-links"><a href="#Create-rendering-to-render-login-links" class="headerlink" title="Create rendering to render login links"></a>Create rendering to render login links</h2><p>Create a controller rendering in sitecore and assign its controller to the following. It gets the login providers that have been configure for the site <code>website</code> and return the list of links.</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">Sitecore9SSO.Controllers</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">using</span> System.Web.Mvc;</span><br><span class="line">    <span class="keyword">using</span> Sitecore.Pipelines.GetSignInUrlInfo;</span><br><span class="line">    <span class="keyword">using</span> Sitecore.Abstractions;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LoginLinksController</span> : <span class="title">Controller</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> ActionResult <span class="title">Index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="comment">//get url to redirect to</span></span><br><span class="line">            <span class="keyword">var</span> url = <span class="string">"/"</span>;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">string</span>.IsNullOrEmpty(Request.QueryString?[<span class="string">"item"</span>]))</span><br><span class="line">                url = Request.QueryString[<span class="string">"item"</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> corePipelineManager = DependencyResolver.Current.GetService&lt;BaseCorePipelineManager&gt;();</span><br><span class="line">            <span class="keyword">var</span> args = <span class="keyword">new</span> GetSignInUrlInfoArgs(<span class="string">"website"</span>, url);</span><br><span class="line">            GetSignInUrlInfoPipeline.Run(corePipelineManager, args);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> View(<span class="string">"/Views/LoginLinks.cshtml"</span>, args.Result);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Create a view to render the links.<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@using Sitecore</span><br><span class="line">@using Sitecore.Mvc</span><br><span class="line"></span><br><span class="line">@model IEnumerable<span class="tag">&lt;<span class="name">Sitecore.Data.SignInUrlInfo</span>&gt;</span></span><br><span class="line"></span><br><span class="line">@foreach (var signIn in Model)</span><br><span class="line">&#123;</span><br><span class="line">    using (Html.BeginForm(null, null, FormMethod.Post, new &#123; @action = signIn.Href &#125;))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"@signIn.Icon"</span> /&gt;</span></span><br><span class="line">            @signIn.Caption</span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>That’s it. If you remove <code>extranet\anonymous</code> access to an item and allow access to <code>sitecore\developer</code> role, <code>anonymous</code> users will be redirected to <code>no-access</code> page (created above) and the login links will be shown.</p><p><img class="" src="/images/login-links.png" alt="Login List"></p><p>====================<br>References:<br><a name="default-external-user-builder">https://doc.sitecore.net/sitecore_experience_platform/developing/developing_with_sitecore/federated_authentication/configure_federated_authentication</a><br><a name="authentication-types">https://doc.sitecore.net/sitecore_experience_platform/developing/developing_with_sitecore/federated_authentication/using_federated_authentication_with_sitecore</a><br><a href="https://docs.microsoft.com/en-us/aspnet/core/security/authentication/social/facebook-logins?tabs=aspnetcore2x" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/aspnet/core/security/authentication/social/facebook-logins?tabs=aspnetcore2x</a><br><a href="https://docs.microsoft.com/en-us/aspnet/core/security/authentication/social/google-logins?tabs=aspnetcore2x" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/aspnet/core/security/authentication/social/google-logins?tabs=aspnetcore2x</a></p><hr><p>Please let me know what you think and/or if you can spot any errors.<br><em>/eom</em></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img class=&quot;hero-img&quot; src=&quot;/images/sitecore9-sso.jpg&quot; alt=&quot;Sitecore 9 SSO&quot;&gt;&lt;/h2&gt;&lt;p&gt;How to implement federated authentication on sitecore 9 to allow visitors to log in to your site using their google or facebook accounts.&lt;br&gt;
    
    </summary>
    
      <category term="Sitecore" scheme="http://josedbaez.com/categories/Sitecore/"/>
    
      <category term="Authentication" scheme="http://josedbaez.com/categories/Sitecore/Authentication/"/>
    
    
      <category term="openid" scheme="http://josedbaez.com/tags/openid/"/>
    
      <category term="authentication" scheme="http://josedbaez.com/tags/authentication/"/>
    
      <category term="sso" scheme="http://josedbaez.com/tags/sso/"/>
    
      <category term="facebook" scheme="http://josedbaez.com/tags/facebook/"/>
    
      <category term="google" scheme="http://josedbaez.com/tags/google/"/>
    
  </entry>
  
  <entry>
    <title>Install and configure Sitecore Dynamics Connect</title>
    <link href="http://josedbaez.com/2018/02/sitecore-dynamics-connector/"/>
    <id>http://josedbaez.com/2018/02/sitecore-dynamics-connector/</id>
    <published>2018-02-06T23:08:23.708Z</published>
    <updated>2018-02-06T23:08:23.708Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><img class="hero-img" src="/images/sitecore-dynamics.jpg" alt="Sitecore Microsoft Dynamics CRM"></h2><p>How to install and configure Sitecore Dynamics Connect module…<br><a id="more"></a></p><p><em>Versions used: Sitecore 8.2 rev. 161221 (8.2 Update-2). Dynamics CRM Connect 1.3</em></p><p>Sitecore Dynamics Connect module allows you to exchange data between Sitecore and Dynamics. In Sitecore’s <a href="https://dev.sitecore.net/Downloads/Dynamics_CRM_Connect/Dynamics_CRM_Connect_1/Dynamics_CRM_Connect_1_3.aspx" target="_blank" rel="noopener">words</a>: “Integrate data from Dynamics CRM with Sitecore, and data from Sitecore with Dynamics CRM.”</p><p>On a previous project, we were using the module to keep xDb contacts in sync as they were being managed in CRM.</p><p>This post outlines how to install and configure the module so you can start using out of the box pipelines.</p><p><strong>Steps:</strong></p><ol><li><p><a href="https://dev.sitecore.net/Downloads/Dynamics_CRM_Connect/Dynamics_CRM_Connect_1/Dynamics_CRM_Connect_1_3.aspx" target="_blank" rel="noopener">Download</a> and install packages in the following order: </p><ol><li>Data Exchange Framework 1.3</li><li>Exchange Framework 1.3</li><li>Dynamics CRM Provider for Data Exchange Framework 1.3</li></ol></li><li><p>Modify your <code>ConnectionStrings.config</code> file and add a connection string to CRM instance. <em>(e.g. <code>&lt;add name=&quot;CRM&quot; connectionString=&quot;Url=https://mycrm.dynamics.com; Username=hola;Password=ppp;&quot; /&gt;</code>)</em> <a href="https://msdn.microsoft.com/en-us/library/gg695810" target="_blank" rel="noopener">MSDN</a> for more info on Dynamics Connection Strings.</p></li><li><p>Go to item <code>/sitecore/system/Data Exchange</code> and create a new <code>Data Exchange Tenant for Dynamics CRM</code> item under it.</p></li><li><p>Go to item <code>/sitecore/system/Data Exchange/[Your Item]/Tenant Settings/Dynamics CRM/Repository Sets</code> and create a new <code>XRM Client Entity Repository Set</code> item under it.</p><ol><li>Set <code>Connection String Name</code> field to your connection string name from step 2</li><li>Click on Test Connection <sup><a href="#assembly-error">optional error</a></sup></li></ol></li><li><p>Go to item <code>/sitecore/system/Data Exchange/[Your Item]]/Endpoints/Providers/Dynamics CRM/Dynamics CRM Entity Endpoint</code> and set field <code>Entity Repository Set</code> to your repository set (step 4). Save item.</p></li><li><p>Go to item <code>/sitecore/system/Data Exchange/[Your Item]</code> and check field <code>Enabled</code>.</p></li></ol><p>That’s it. You have configured the connection to Dynamics and can now run any pipeline under <code>/sitecore/system/Data Exchange/[Name Of Item]/Pipeline Batches</code> by clicking on the item and <code>Run Pipeline Batch</code> from the <code>Data Exchange</code> menu.</p><p>====================</p><p><a name="assembly-error">If you get an error like:</a> <code>Could not load file or assembly &#39;Microsoft.Xrm.Sdk, Version=7.0.0.0...</code></p><p>You need to add the following dependency assembly to your web.config (This has been reported to sitecore support and the official documentation will get amended).</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependentAssembly</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">assemblyIdentity</span> <span class="attr">name</span>=<span class="string">"Microsoft.Xrm.Sdk"</span> <span class="attr">publicKeyToken</span>=<span class="string">"31bf3856ad364e35"</span> <span class="attr">culture</span>=<span class="string">"neutral"</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bindingRedirect</span> <span class="attr">oldVersion</span>=<span class="string">"0.0.0.0-8.0.0.0"</span> <span class="attr">newVersion</span>=<span class="string">"8.0.0.0"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependentAssembly</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependentAssembly</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">assemblyIdentity</span> <span class="attr">name</span>=<span class="string">"Microsoft.Crm.Sdk.Proxy"</span> <span class="attr">publicKeyToken</span>=<span class="string">"31bf3856ad364e35"</span> <span class="attr">culture</span>=<span class="string">"neutral"</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bindingRedirect</span> <span class="attr">oldVersion</span>=<span class="string">"0.0.0.0-8.0.0.0"</span> <span class="attr">newVersion</span>=<span class="string">"8.0.0.0"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependentAssembly</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>Please let me know what you think and/or if you can spot any errors.<br><em>/eom</em></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img class=&quot;hero-img&quot; src=&quot;/images/sitecore-dynamics.jpg&quot; alt=&quot;Sitecore Microsoft Dynamics CRM&quot;&gt;&lt;/h2&gt;&lt;p&gt;How to install and configure Sitecore Dynamics Connect module…&lt;br&gt;
    
    </summary>
    
      <category term="Sitecore" scheme="http://josedbaez.com/categories/Sitecore/"/>
    
      <category term="CRM" scheme="http://josedbaez.com/categories/Sitecore/CRM/"/>
    
    
      <category term="xdb" scheme="http://josedbaez.com/tags/xdb/"/>
    
      <category term="dynamics" scheme="http://josedbaez.com/tags/dynamics/"/>
    
  </entry>
  
  <entry>
    <title>Application insights logger</title>
    <link href="http://josedbaez.com/2018/02/application-insights-logger/"/>
    <id>http://josedbaez.com/2018/02/application-insights-logger/</id>
    <published>2018-02-06T23:08:23.706Z</published>
    <updated>2018-02-06T23:08:23.706Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><img class="hero-img" src="/images/app-insights.png" alt="Application Insights"></h2><p>A little helper to log custom messages or errors to azure application insights.<br><a id="more"></a></p><p><em>Versions used: Sitecore 8.2 rev. 170614 (8.2 Update-4). Microsoft.ApplicationInsights 2.4.0</em></p><p>You can configure your sitecore website or any web application to log any exceptions to <a href="https://azure.microsoft.com/en-us/services/application-insights/" target="_blank" rel="noopener">Azure Application Insights</a>, but sometimes you want to specifically log something when an action happens. The following helper allows you to send custom messages to application insights.</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> Microsoft.ApplicationInsights;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">InsightsLogger</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> TelemetryClient telemetry = <span class="keyword">new</span> TelemetryClient();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">LogMessage</span>(<span class="params">Dictionary&lt;<span class="keyword">string</span>, <span class="keyword">string</span>&gt; message</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(message!=<span class="literal">null</span> &amp;&amp; message.Any())</span><br><span class="line">            telemetry.TrackEvent(<span class="string">"MyEvent"</span>, message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">LogException</span>(<span class="params">Exception e</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        telemetry.TrackException(e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Don’t forget to add nuget package <code>Microsoft.ApplicationInsights</code>.</p><p>If you want to avoid logging every sql request, remove the SQL telemetry by doing this. </p><p>Create a new processor to filter out SQL instances as follows (extracted from <a href="https://stackoverflow.com/a/38321304" target="_blank" rel="noopener">https://stackoverflow.com/a/38321304</a>)</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.ApplicationInsights.Channel;</span><br><span class="line"><span class="keyword">using</span> Microsoft.ApplicationInsights.DataContracts;</span><br><span class="line"><span class="keyword">using</span> Microsoft.ApplicationInsights.Extensibility;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">NoSqlDependenciesProcessor</span> : <span class="title">ITelemetryProcessor</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> ITelemetryProcessor Next &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NoSqlDependenciesProcessor</span>(<span class="params">ITelemetryProcessor next</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.Next = next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Process</span>(<span class="params">ITelemetry item</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (IsSQLDependency(item))</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">this</span>.Next.Process(item);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">bool</span> <span class="title">IsSQLDependency</span>(<span class="params">ITelemetry item</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> dependency = item <span class="keyword">as</span> DependencyTelemetry;</span><br><span class="line">        <span class="keyword">switch</span> (dependency?.Type)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="literal">null</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"SQL"</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Open <code>ApplicationInsights.config</code> and add a new type (inside <code>&lt;TelemetryProcessors&gt;</code>) pointing to the processor above.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">    <span class="tag">&lt;<span class="name">Add</span> <span class="attr">Type</span>=<span class="string">"MyApp.NoSqlDependenciesProcessor, MyApp"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">TelemetryProcessors</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>Please let me know what you think and/or if you can spot any errors.<br><em>/eom</em></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img class=&quot;hero-img&quot; src=&quot;/images/app-insights.png&quot; alt=&quot;Application Insights&quot;&gt;&lt;/h2&gt;&lt;p&gt;A little helper to log custom messages or errors to azure application insights.&lt;br&gt;
    
    </summary>
    
      <category term="Sitecore" scheme="http://josedbaez.com/categories/Sitecore/"/>
    
      <category term="Azure" scheme="http://josedbaez.com/categories/Sitecore/Azure/"/>
    
    
      <category term="azure" scheme="http://josedbaez.com/tags/azure/"/>
    
      <category term="insights" scheme="http://josedbaez.com/tags/insights/"/>
    
      <category term="helper" scheme="http://josedbaez.com/tags/helper/"/>
    
  </entry>
  
  <entry>
    <title>Log in to Sitecore using OpenID Connect with Okta</title>
    <link href="http://josedbaez.com/2017/09/sitecore-okta-login/"/>
    <id>http://josedbaez.com/2017/09/sitecore-okta-login/</id>
    <published>2017-09-30T00:00:00.000Z</published>
    <updated>2018-03-29T14:12:51.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><img class="hero-img" src="/images/okta-sso.png" alt="Sitecore Okta SSO"></h2><p>How to implement OpenID Connect Single Sign-On with Okta to log in to sitecore (backend NOT client facing site) by intercepting Authorize attribute.<br><a id="more"></a></p><p><em>Versions used: Sitecore 8.2 rev. 170614 (8.2 Update-4).</em></p><p><strong>Update/Warning:</strong> Preview mode fails for virtual users with the code below. To fix: 1- Call <a href="#ticket-function">this function</a> after authenticating the user to create an authentication ticket in sitecore. 2- Contact sitecore support and quote public reference 192715 so they can provide a known bug related to <code>item:preview</code> command. </p><p>In this post I will outline how to implement OpenID SSO with <a href="https://www.okta.com/" target="_blank" rel="noopener">Okta</a> to allow users to <strong>log in to sitecore (backend NOT client facing site)</strong> from Okta’s dashboard or by being redirected to Okta’s login screen when trying to directly access sitecore through custom url <sup><a href="#custom-url">custom url</a></sup>. <em>Authentication logic has been copied/modified from <a href="https://github.com/oktadeveloper/okta-oauth-aspnet-codeflow" target="_blank" rel="noopener">Okta’s github example code.</a></em></p><p>The solution provided by OKTA uses <a href="http://owin.org/" target="_blank" rel="noopener">OWIN</a> libraries. I integrated the OWIN middleware through a sitecore pipeline following <a href="https://github.com/VyacheslavPritykin/Sitecore-Owin" target="_blank" rel="noopener">VyacheslavPritykin Sitecore-Owin</a> solution.</p><p><strong> The code flow of this solution: </strong><br>The user requests a method decorated with <code>Authorize</code><sup><a href="#all-authorize">Authorize</a></sup> attribute, if the user is not authenticated, the middleware will get triggered and the user is redirected to Okta. Once the user logs in to okta, the middleware gets notified, we extract the information returned by okta and log the user in as a virtual user with <code>AuthenticationManager</code>. The original request (to method decorated with Authorize) is sent again and the user now goes through because it has been authenticated.</p><p><strong>The solution is divided in the following parts:</strong></p><ul><li>OKTA application configuration</li><li>Sitecore pipeline to register OWIN middleware</li><li>OWIN middleware to handle authentication redirects</li><li>Sitecore login helper</li><li>Login controller</li></ul><h2 id="OKTA-application-configuration"><a href="#OKTA-application-configuration" class="headerlink" title="OKTA application configuration"></a>OKTA application configuration</h2><p>You’ll need to <a href="https://developer.okta.com/docs/api/getting_started/api_test_client.html" target="_blank" rel="noopener">Sign up for Okta</a> and get access to the API.</p><p>Once you have access to okta; within the Admin part of your account, add a new application with the following selections: Web as platform and OpenID Connect as Sign on method.</p><p>Go to your newly created application and configure as follows:</p><p><strong>General tab</strong><br><img class="content-img" src="/images/okta-general-tab.jpg" alt="Okta general tab"></p><p>Most of the configuration is self explanatory. <code>Login redirect URIs</code> is defined by Okta as “URI where Okta will send OAuth responses”. We don’t really use it but it’s required because a request to it will be sent once the user has logged in to Okta. <code>Initiate login URI</code> is another request we will get from Okta once the user has logged in or when the user tries to access sitecore from Okta’s dashboard. This is where we will redirect the user to sitecore.</p><p>Copy <a name="client-id"><code>Client ID</code></a> and <a name="client-secret"><code>Client secret</code><a> as we are going to need these later.</a></a></p><p><strong>Sign On tab</strong><br><img class="content-img" src="/images/okta-sign-on-tab.jpg" alt="Okta sign-on tab"><br><img class="content-img" src="/images/okta-sign-on-policy.png" alt="Okta sign-on policy"></p><p>On this tab you can configure access policy and the OpenID token. We are telling okta to return all groups but here you can configure the groups claim to specify which groups you want included by entering expressions that will be used to filter groups. For example myapp.* means all groups prefixed with “myapp” will be included in the response attribute statement. <a href="https://support.okta.com/help/Documentation/Knowledge_Article/Configuring-Okta-Template-SAML-20-application" target="_blank" rel="noopener">Go here</a> for more information.</p><p><strong>Assignments</strong><br>Here you assign which users and or groups can access your app. I recommend using groups instead of users.</p><p>Okta groups are like sitecore roles; we will need to map these groups to equivalent sitecore roles to give them proper sitecore permissions. To make the mapping easier, we decided to name Okta groups the same as the Sitecore role it will be mapped to.</p><h2 id="Sitecore-OWIN-middleware-pipeline"><a href="#Sitecore-OWIN-middleware-pipeline" class="headerlink" title="Sitecore OWIN middleware pipeline"></a>Sitecore OWIN middleware pipeline</h2><p>You can either install <a href="https://github.com/VyacheslavPritykin/Sitecore-Owin" target="_blank" rel="noopener">VyacheslavPritykin Sitecore-Owin</a> nuget package or do the following.</p><ul><li><p>Define a custom pipeline in sitecore</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">sitecore</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">pipelines</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">initOwinMiddleware</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">processor</span> <span class="attr">mode</span>=<span class="string">"on"</span> <span class="attr">type</span>=<span class="string">"MySite.OwinMiddleware, MySite"</span>&gt;</span><span class="tag">&lt;/<span class="name">processor</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">initOwinMiddleware</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">pipelines</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">sitecore</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>The processor requires a custom <code>PipelineArgs</code> that sets the Owin app object on startup.</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Sitecore.Pipelines;</span><br><span class="line"><span class="keyword">using</span> IAppBuilder = Owin.IAppBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MySite</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">InitOwinMiddlewareMiddlewareArgs</span> : <span class="title">PipelineArgs</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> Owin.IAppBuilder App &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">InitializeOwinOktaMiddlewareArgs</span>(<span class="params">IAppBuilder app</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.App = app;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>The <code>initOwinMiddleware</code> pipeline is called on startup by setting the <code>owin:AppStartup</code> class reference in our web.config.<br>The following transform:</p><ul><li>Adds settings <code>owin:AutomaticAppStartup</code> and <code>owin:AppStartup</code>.</li><li>Sets authentication to none. This is done to avoid an infinite loop from okta to sitecore.</li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">appSettings</span> <span class="attr">xdt:Transform</span>=<span class="string">"InsertIfMissing"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">add</span> <span class="attr">key</span>=<span class="string">"owin:AutomaticAppStartup"</span> <span class="attr">value</span>=<span class="string">"true"</span> <span class="attr">xdt:Transform</span>=<span class="string">"InsertIfMissing"</span> <span class="attr">xdt:Locator</span>=<span class="string">"Match(key)"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">add</span> <span class="attr">key</span>=<span class="string">"owin:AppStartup"</span> <span class="attr">value</span>=<span class="string">"MySite.Startup, MySite"</span> <span class="attr">xdt:Transform</span>=<span class="string">"InsertIfMissing"</span> <span class="attr">xdt:Locator</span>=<span class="string">"Match(key)"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">appSettings</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">system.web</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">authentication</span> <span class="attr">mode</span>=<span class="string">"None"</span> <span class="attr">xdt:Transform</span>=<span class="string">"SetAttributes"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">authentication</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">system.web</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Startup class implementation.</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.Owin;</span><br><span class="line"><span class="keyword">using</span> Owin;</span><br><span class="line"><span class="keyword">using</span> Sitecore.Pipelines;</span><br><span class="line"></span><br><span class="line">[<span class="meta">assembly: OwinStartup(typeof(Startup))</span>]</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MySite</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Startup</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Configuration</span>(<span class="params">IAppBuilder app</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            CorePipeline.Run(<span class="string">"initOwinMiddleware"</span>, <span class="keyword">new</span> InitOwinMiddlewareMiddlewareArgs(app));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="OWIN-middleware-and-Okta-redirect-implementation"><a href="#OWIN-middleware-and-Okta-redirect-implementation" class="headerlink" title="OWIN middleware and Okta redirect implementation"></a>OWIN middleware and Okta redirect implementation</h2><p>The OWIN middleware pipeline handles the authentication configuration of the web application. It tells asp.net where to redirect the user and what to do when the authorisation is given to the user.</p><p>As stated before, this logic was extracted from <a href="https://github.com/oktadeveloper/okta-oauth-aspnet-codeflow" target="_blank" rel="noopener">Okta’s codeflow example code.</a> and modified so it can work with latest OWIN and Claims libraries <sup><a href="#versions">versions used</a></sup>.</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Globalization;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Security.Claims;</span><br><span class="line"><span class="keyword">using</span> IdentityModel.Client;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Owin.Security;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Owin.Security.Cookies;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Owin.Security.OpenIdConnect;</span><br><span class="line"><span class="keyword">using</span> Owin;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MySite</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">OwinMiddleware</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Process</span>(<span class="params">InitOwinMiddlewareMiddlewareArgs args</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> oathAuthority = <span class="string">"https://dev-666666.oktapreview.com"</span>; <span class="comment">//change this</span></span><br><span class="line">            args.App.UseCookieAuthentication(<span class="keyword">new</span> CookieAuthenticationOptions &#123;AuthenticationType = <span class="string">"Cookies"</span>&#125;);</span><br><span class="line">            args.App.UseOpenIdConnectAuthentication(<span class="keyword">new</span> OpenIdConnectAuthenticationOptions</span><br><span class="line">            &#123;</span><br><span class="line">                ClientId = <span class="string">"myclientid123"</span>, <span class="comment">//change this</span></span><br><span class="line">                Authority = oathAuthority,</span><br><span class="line">                RedirectUri = <span class="string">"https://Website_URL/Okta/Callback"</span>, <span class="comment">//change this</span></span><br><span class="line">                ResponseType = <span class="string">"code id_token"</span>, <span class="comment">//</span></span><br><span class="line">                Scope = <span class="string">"openid email profile address phone groups offline_access"</span>, <span class="comment">//claims to get from okta</span></span><br><span class="line">                SignInAsAuthenticationType = <span class="string">"Cookies"</span>,</span><br><span class="line">                UseTokenLifetime = <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">                Notifications = <span class="keyword">new</span> OpenIdConnectAuthenticationNotifications</span><br><span class="line">                &#123;</span><br><span class="line">                    AuthorizationCodeReceived = <span class="keyword">async</span> n =&gt;</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">var</span> tokenClient = <span class="keyword">new</span> TokenClient(oathAuthority + <span class="string">"/oauth2/v1/token"</span>, <span class="string">"myclientid123"</span>, <span class="string">"myclientsecret"</span>, AuthenticationStyle.BasicAuthentication);</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">var</span> tokenResponse = <span class="keyword">await</span> tokenClient.RequestAuthorizationCodeAsync(n.Code, n.RedirectUri);</span><br><span class="line">                        <span class="keyword">if</span> (tokenResponse.IsError)</span><br><span class="line">                            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(tokenResponse.Error);</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">var</span> userInfoClient = <span class="keyword">new</span> UserInfoClient(oathAuthority + Constants.UserInfoEndpoint);</span><br><span class="line">                        <span class="keyword">var</span> userInfoResponse = <span class="keyword">await</span> userInfoClient.GetAsync(tokenResponse.AccessToken);</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">var</span> id = <span class="keyword">new</span> ClaimsIdentity(userInfoResponse.Claims, n.AuthenticationTicket.Identity.AuthenticationType);</span><br><span class="line">                        <span class="keyword">var</span> idClaims = userInfoResponse.Claims;</span><br><span class="line"></span><br><span class="line">                        id.AddClaim(<span class="keyword">new</span> Claim(<span class="string">"id_token"</span>, n.ProtocolMessage.IdToken));</span><br><span class="line">                        id.AddClaim(<span class="keyword">new</span> Claim(<span class="string">"access_token"</span>, tokenResponse.AccessToken));</span><br><span class="line">                        <span class="keyword">if</span> (tokenResponse.RefreshToken != <span class="literal">null</span>)</span><br><span class="line">                            id.AddClaim(<span class="keyword">new</span> Claim(<span class="string">"refresh_token"</span>, tokenResponse.RefreshToken));</span><br><span class="line"></span><br><span class="line">                        id.AddClaim(<span class="keyword">new</span> Claim(<span class="string">"expires_at"</span>, DateTime.Now.AddSeconds(tokenResponse.ExpiresIn).ToLocalTime().ToString(CultureInfo.InvariantCulture)));</span><br><span class="line">                        <span class="keyword">if</span> (tokenResponse.RefreshToken != <span class="literal">null</span>)</span><br><span class="line">                            id.AddClaim(<span class="keyword">new</span> Claim(<span class="string">"refresh_token"</span>, tokenResponse.RefreshToken));</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">var</span> nameClaim = <span class="keyword">new</span> Claim(ClaimTypes.Name, idClaims.FirstOrDefault(c =&gt; c.Type == <span class="string">"name"</span>)?.Value);</span><br><span class="line">                        id.AddClaim(nameClaim);</span><br><span class="line"></span><br><span class="line">                        n.AuthenticationTicket = <span class="keyword">new</span> AuthenticationTicket(<span class="keyword">new</span> ClaimsIdentity(id.Claims, n.AuthenticationTicket.Identity.AuthenticationType),</span><br><span class="line">                            n.AuthenticationTicket.Properties);</span><br><span class="line"></span><br><span class="line">                        <span class="comment">//log user in to sitecore</span></span><br><span class="line">                        <span class="keyword">var</span> princ = <span class="keyword">new</span> ClaimsPrincipal(<span class="keyword">new</span>[] &#123; id &#125;);</span><br><span class="line">                        MySite.Helpers.LogUser(princ);</span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>See below for <code>MySite.Helpers.LogUser(princ)</code> implementation.</p><h2 id="Sitecore-login-helper"><a href="#Sitecore-login-helper" class="headerlink" title="Sitecore login helper"></a>Sitecore login helper</h2><p>This helper extracts the required information from Okta’s token response, logs in the user as a <a href="https://briancaos.wordpress.com/2015/11/13/sitecore-virtual-users-authenticate-users-from-external-systems/" target="_blank" rel="noopener">virtual user</a> and maps okta groups to sitecore roles.<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Security.Claims;</span><br><span class="line"><span class="keyword">using</span> System.Security.Principal;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNet.Identity;</span><br><span class="line"><span class="keyword">using</span> Sitecore;</span><br><span class="line"><span class="keyword">using</span> Sitecore.Diagnostics;</span><br><span class="line"><span class="keyword">using</span> Sitecore.Security.Accounts;</span><br><span class="line"><span class="keyword">using</span> Sitecore.Security.Authentication;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MySite</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Helpers</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">LogUser</span>(<span class="params">IPrincipal principal</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> identity = principal.Identity <span class="keyword">as</span> ClaimsIdentity;</span><br><span class="line">            <span class="keyword">if</span> (identity == <span class="literal">null</span> || !identity.IsAuthenticated)</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> email = identity.FindFirstValue(<span class="string">"email"</span>);</span><br><span class="line">            <span class="keyword">var</span> userName = identity.FindFirstValue(<span class="string">"preferred_username"</span>);</span><br><span class="line">            <span class="keyword">var</span> sitecoreUsername = <span class="keyword">string</span>.Format(<span class="string">"&#123;0&#125;\\&#123;1&#125;"</span>, <span class="string">"sitecore"</span>, userName);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> user = AuthenticationManager.BuildVirtualUser(sitecoreUsername, <span class="literal">true</span>);</span><br><span class="line">            user.Profile.Name = identity.FindFirstValue(<span class="string">"given_name"</span>);</span><br><span class="line">            user.Profile.Email = email;</span><br><span class="line">            user.Profile.FullName = identity.FindFirstValue(<span class="string">"given_name"</span>);</span><br><span class="line"></span><br><span class="line">            AddRoles(identity, user);</span><br><span class="line">            user.Profile.Save();</span><br><span class="line">            AuthenticationManager.LoginVirtualUser(user);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddRoles</span>(<span class="params">ClaimsIdentity claimsIdentity, User user</span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> groups = claimsIdentity.FindAll(<span class="string">"groups"</span>);</span><br><span class="line">            <span class="keyword">if</span> (groups == <span class="literal">null</span> || !groups.Any())</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">var</span> <span class="keyword">group</span> <span class="keyword">in</span> groups)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">group</span>.Value.ToLowerInvariant().Equals(<span class="string">"everyone"</span>))</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">var</span> role = <span class="keyword">string</span>.Format(<span class="string">"&#123;0&#125;\\&#123;1&#125;"</span>, <span class="string">"mydomain"</span>, role.Value);</span><br><span class="line">                <span class="keyword">if</span> (Role.Exists(role))</span><br><span class="line">                    user.Roles.Add(Role.FromName(role));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Login-controller"><a href="#Login-controller" class="headerlink" title="Login controller"></a>Login controller</h2><p>All we have left to do now is create a method with the <code>[Authorize]</code> attribute on it, and redirect users to this route so OWIN middleware can take over.</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">OktaController</span> : <span class="title">Controller</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ActionResult <span class="title">Callback</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Redirect(<span class="string">"/sitecore"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Authorize</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ActionResult <span class="title">Login</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> owinContext = System.Web.HttpContext.Current.Request.GetOwinContext();</span><br><span class="line">        <span class="keyword">if</span> (owinContext?.Authentication.User != <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> Redirect(<span class="string">"/sitecore"</span>);</span><br><span class="line">        <span class="keyword">return</span> Redirect(<span class="string">"/"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Do not forget to register the controller’s route in route table.</p><p>====================<br><a name="all-authorize">All authorize decorated methods?</a>We didn’t need membership for end users so we could afford to intercept any <code>Authorize</code> attribute. You can configure a separate middleware for end users. See <a href="https://github.com/BasLijten/SitecoreFederatedLogin" target="_blank" rel="noopener">Bas Lijten’s federated solution</a></p><p><a name="custom-url">Why a custom url?</a> We opted to use a custom URL because we wanted to be able to log-in to sitecore using the conventional method as well.</p><p><a name="versions">Versions used:</a> I had lot of issues figuring out dll versions, so here’s the list of the versions used on this implementation.<br>Newtonsoft.Json 10.0.0.0<br>Microsoft.IdentityModel.Protocol.Extensions 1.0.40306.1554<br>System.IdentityModel.Tokens.Jwt 4.0.40306.1554<br>Microsoft.Owin.Security 3.1.0.0<br>Microsoft.Owin.Security.Cookies 3.1.0.0<br>Microsoft.Owin 3.1.0.0</p><p>See <a href="http://josedbaez.com/2017/08/binding-redirect-patch/">this</a> if you are having binding redirects issues.</p><p><a name="ticket-function">Create ticket</a> Extracted from: <a href="https://singh-prabhat.blogspot.com/2016/12/sitecore-enable-preview-mode-for.html" target="_blank" rel="noopener">https://singh-prabhat.blogspot.com/2016/12/sitecore-enable-preview-mode-for.html</a><br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">PerformAutoLogin</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">string</span> userName = <span class="string">"extranet\\Preview Anonymous User"</span>;</span><br><span class="line">    AuthenticationManager.Login(userName);</span><br><span class="line">    <span class="keyword">string</span> ticket = Sitecore.Web.Authentication.TicketManager.CreateTicket(userName, <span class="string">@"/sitecore/shell"</span>);</span><br><span class="line">    HttpContext current = HttpContext.Current;</span><br><span class="line">    <span class="keyword">if</span> (current != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        HttpCookie cookie = <span class="keyword">new</span> HttpCookie(Sitecore.Web.Authentication.TicketManager.CookieName, ticket)</span><br><span class="line">        &#123;</span><br><span class="line">            HttpOnly = <span class="literal">true</span></span><br><span class="line">        &#125;;</span><br><span class="line">        current.Response.AppendCookie(cookie);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><p>Please let me know what you think and/or if you can spot any errors.<br><em>/eom</em></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img class=&quot;hero-img&quot; src=&quot;/images/okta-sso.png&quot; alt=&quot;Sitecore Okta SSO&quot;&gt;&lt;/h2&gt;&lt;p&gt;How to implement OpenID Connect Single Sign-On with Okta to log in to sitecore (backend NOT client facing site) by intercepting Authorize attribute.&lt;br&gt;
    
    </summary>
    
      <category term="Sitecore" scheme="http://josedbaez.com/categories/Sitecore/"/>
    
      <category term="Authentication" scheme="http://josedbaez.com/categories/Sitecore/Authentication/"/>
    
    
      <category term="openid" scheme="http://josedbaez.com/tags/openid/"/>
    
      <category term="okta" scheme="http://josedbaez.com/tags/okta/"/>
    
      <category term="authentication" scheme="http://josedbaez.com/tags/authentication/"/>
    
      <category term="sso" scheme="http://josedbaez.com/tags/sso/"/>
    
  </entry>
  
  <entry>
    <title>Patch binding redirects through transform file</title>
    <link href="http://josedbaez.com/2017/08/binding-redirect-patch/"/>
    <id>http://josedbaez.com/2017/08/binding-redirect-patch/</id>
    <published>2017-08-31T00:00:00.000Z</published>
    <updated>2018-02-06T23:08:23.707Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><img class="hero-img" src="/images/binding-redirect-patch.jpg" alt="Binding redirect patch"></h2><p>How to patch binding redirects in web.config through transform files.<br><a id="more"></a></p><p><a href="https://docs.microsoft.com/en-us/dotnet/framework/configure-apps/redirect-assembly-versions" target="_blank" rel="noopener">Binding redirects</a> are used to redirect one assembly version to another.</p><p>This is usually done by adding or modifying entries in your application’s web.config file. However, in some cases you don’t want to change the web.config directly, but patch through transform files instead (e.g. <a href="https://github.com/Sitecore/Habitat" target="_blank" rel="noopener">Sitecore Habitat</a> uses gulp and msbuild to achieve this).</p><p>The xml below applies a binding redirect to assemble <code>Newtonsoft.Json</code>. It contains two tranform operations. The first one ,<code>InsertIfMissing</code>, inserts a new entry if the assembly entry doesn’t exist, and the second one, <code>Replace</code>, replaces it in case the existing redirect already exist.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">xmlns:xdt</span>=<span class="string">"http://schemas.microsoft.com/XML-Document-Transform"</span> <span class="attr">xmlns:asmv1</span>=<span class="string">"urn:schemas-microsoft-com:asm.v1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">runtime</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">assemblyBinding</span> <span class="attr">xmlns</span>=<span class="string">"urn:schemas-microsoft-com:asm.v1"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependentAssembly</span> <span class="attr">xdt:Transform</span>=<span class="string">"InsertIfMissing"</span> <span class="attr">xdt:Locator</span>=<span class="string">"Condition(asmv1:assemblyIdentity/@name='Newtonsoft.Json')"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">assemblyIdentity</span> <span class="attr">name</span>=<span class="string">"Newtonsoft.Json"</span> <span class="attr">publicKeyToken</span>=<span class="string">"30ad4fe6b2a6aeed"</span> <span class="attr">xmlns</span>=<span class="string">"urn:schemas-microsoft-com:asm.v1"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bindingRedirect</span> <span class="attr">oldVersion</span>=<span class="string">"0.0.0.0-10.0.0.0"</span> <span class="attr">newVersion</span>=<span class="string">"10.0.0.0"</span> <span class="attr">xmlns</span>=<span class="string">"urn:schemas-microsoft-com:asm.v1"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependentAssembly</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependentAssembly</span> <span class="attr">xdt:Transform</span>=<span class="string">"Replace"</span> <span class="attr">xdt:Locator</span>=<span class="string">"Condition(asmv1:assemblyIdentity/@name='Newtonsoft.Json')"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">assemblyIdentity</span> <span class="attr">name</span>=<span class="string">"Newtonsoft.Json"</span> <span class="attr">publicKeyToken</span>=<span class="string">"30ad4fe6b2a6aeed"</span> <span class="attr">xmlns</span>=<span class="string">"urn:schemas-microsoft-com:asm.v1"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bindingRedirect</span> <span class="attr">oldVersion</span>=<span class="string">"0.0.0.0-10.0.0.0"</span> <span class="attr">newVersion</span>=<span class="string">"10.0.0.0"</span> <span class="attr">xmlns</span>=<span class="string">"urn:schemas-microsoft-com:asm.v1"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependentAssembly</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">assemblyBinding</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">runtime</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Pay attention at the namespace <code>asmv1</code> added to the <code>configuration</code> element. It is needed for this to work.</p><p>NB: I wanted to avoid adding <code>assemblyIdentity</code> and <code>bindingRedirect</code> elements in the <code>InsertIfMissing</code> transform but couldn’t make it work. Let me know if you know how.</p><hr><p>Please let me know what you think and/or if you can spot any errors.<br><em>/eom</em></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img class=&quot;hero-img&quot; src=&quot;/images/binding-redirect-patch.jpg&quot; alt=&quot;Binding redirect patch&quot;&gt;&lt;/h2&gt;&lt;p&gt;How to patch binding redirects in web.config through transform files.&lt;br&gt;
    
    </summary>
    
      <category term="Configuration" scheme="http://josedbaez.com/categories/Configuration/"/>
    
    
      <category term="patch" scheme="http://josedbaez.com/tags/patch/"/>
    
      <category term="bindingredirect" scheme="http://josedbaez.com/tags/bindingredirect/"/>
    
      <category term="webconfig" scheme="http://josedbaez.com/tags/webconfig/"/>
    
      <category term="assembly" scheme="http://josedbaez.com/tags/assembly/"/>
    
  </entry>
  
  <entry>
    <title>General Link maxJsonLength error</title>
    <link href="http://josedbaez.com/2017/04/linkfield-jsonmaxlength-error/"/>
    <id>http://josedbaez.com/2017/04/linkfield-jsonmaxlength-error/</id>
    <published>2017-04-06T00:00:00.000Z</published>
    <updated>2018-02-06T23:08:23.707Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><img class="hero-img" src="/images/general-link-bug.jpg" alt="Sitecore General Link Bug"></h2><p>Fix error related to maxJsonLength when using general link in content and experience editor. The length of the string exceeds the value set on the maxJsonLength property…<br><a id="more"></a></p><p><em>Versions used: Sitecore 8.1 rev. 151207 (Update-1).</em></p><p>When using general link, if you try to expand an item that has a large number of children (which should be avoided, but sometimes is out of your hands; in our case, they were commerce items imported by the module) you will notice it never ends loading the children. If you open the browser console, you will see an error like the following:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="attr">"statusCode"</span>:<span class="number">500</span>,</span><br><span class="line">   <span class="attr">"error"</span>:&#123;</span><br><span class="line">      <span class="attr">"message"</span>:<span class="string">"Error during serialization or deserialization using the JSON JavaScriptSerializer. The length of the string exceeds the value set on the maxJsonLength property."</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>When you click on the <code>+</code> icon, an AJAX request is sent to an Item Web API method which is using the class <code>System.Web.Script.Serialization.JavaScriptSerializer</code> to serialize the object being returned. The issue? <code>maxJsonLength</code> default size is 2MB.  We tried adding setting <code>&lt;jsonSerialization maxJsonLength=&quot;######&quot;/&gt;</code> in web.config but it didn’t fix the issue.</p><p>We contacted sitecore support about this and it was flagged as a bug (ref no. 94776). The official solution is <a href="https://github.com/SitecoreSupport/Sitecore.Support.94776/releases/tag/8.1.1.0" target="_blank" rel="noopener">here</a>. It now allows us to set the maximum allowed size in a new setting called <code>JsonSerialization.MaxLength</code></p><hr><p>Please let me know what you think and/or if you can spot any errors.<br><em>/eom</em></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img class=&quot;hero-img&quot; src=&quot;/images/general-link-bug.jpg&quot; alt=&quot;Sitecore General Link Bug&quot;&gt;&lt;/h2&gt;&lt;p&gt;Fix error related to maxJsonLength when using general link in content and experience editor. The length of the string exceeds the value set on the maxJsonLength property…&lt;br&gt;
    
    </summary>
    
      <category term="Sitecore" scheme="http://josedbaez.com/categories/Sitecore/"/>
    
      <category term="Field Types" scheme="http://josedbaez.com/categories/Sitecore/Field-Types/"/>
    
    
      <category term="commerce" scheme="http://josedbaez.com/tags/commerce/"/>
    
      <category term="generallink" scheme="http://josedbaez.com/tags/generallink/"/>
    
      <category term="bug" scheme="http://josedbaez.com/tags/bug/"/>
    
  </entry>
  
  <entry>
    <title>Map Monoco Link List field type with Synthesis</title>
    <link href="http://josedbaez.com/2017/03/synthesis-link-list/"/>
    <id>http://josedbaez.com/2017/03/synthesis-link-list/</id>
    <published>2017-03-15T00:00:00.000Z</published>
    <updated>2018-02-06T23:08:23.708Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><img class="hero-img" src="/images/synthesizing.jpg" alt="Synthesizing"></h2><p>Map strongly typed Link List field type with Synthesis when generating objects…<br><a id="more"></a></p><p><em>Versions used: Sitecore 8.1 rev. 160519 (8.1 Update-3)</em></p><p>This post is an addendum to my previous post about <a href="http://josedbaez.com/2016/09/synthesis-rendering-parameters-helper">Monoco Link List field type in Sitecore 8</a>.</p><p>I love using object mappers. On a previous project I was using <a href="https://github.com/kamsar/Synthesis" target="_blank" rel="noopener">synthesis</a> and Link List field; and we wanted to be able to map our slick link list when generating synthesis models. I’ll show how to do this here. <a href="#source-code">Source code here</a></p><p><em>NB: As mentioned in the previous post, this is an old code done in a rush, and might not be up to a good code standard, but it’s a good start and does the job.</em></p><p>The first thing we have to do is copy <code>Fields\LinkListField.cs</code> class (I’ll call it <code>LinkListFieldSynthesis.cs</code> in this post), extract an interface and add a new constructor required by Synthesis for lazy loading.</p><p>The interface looks like this:<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">ILinkListFieldSynthesis</span></span><br><span class="line">&#123;</span><br><span class="line">    IEnumerable&lt;Link&gt; Links &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line">    <span class="keyword">string</span> Root &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    XmlDocument Xml &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line">    Field InnerField &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line">    <span class="keyword">string</span> Value &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">string</span> <span class="title">GetAttribute</span>(<span class="params"><span class="keyword">string</span> name</span>)</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SetAttribute</span>(<span class="params"><span class="keyword">string</span> name, <span class="keyword">string</span> <span class="keyword">value</span></span>)</span>;</span><br><span class="line">    <span class="function">List&lt;WebEditButton&gt; <span class="title">GetWebEditButtons</span>(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Relink</span>(<span class="params">ItemLink item, Item newLink</span>)</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">RemoveLink</span>(<span class="params">ItemLink itemLink</span>)</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">UpdateLink</span>(<span class="params">ItemLink itemLink</span>)</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ValidateLinks</span>(<span class="params">LinksValidationResult result</span>)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Then, you add a new constructor to the class that looks like this:<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LinkListFieldSynthesis</span>(<span class="params">Synthesis.FieldTypes.LazyField lazyField, <span class="keyword">string</span> indexValue</span>)</span></span><br><span class="line"><span class="function">  : <span class="title">base</span>(<span class="params">lazyField.Value, <span class="string">"links"</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>And finally, we tell synthesis about this new field type and how to map it by adding the following to file <code>Synthesis.config</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">map</span> <span class="attr">field</span>=<span class="string">"LinkList"</span> <span class="attr">type</span>=<span class="string">"Monoco.CMS.Fields.LinkListFieldSynthesis, Monoco.CMS"</span> <span class="attr">interface</span>=<span class="string">"Monoco.CMS.Fields.ILinkListFieldSynthesis, Monoco.CMS"</span> /&gt;</span></span><br></pre></td></tr></table></figure></p><p>That’s it. Compile your code and generate your synthesis models which you can then use like<br><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> link <span class="keyword">in</span> Model.MyProperty.Links)</span><br><span class="line">&#123;</span><br><span class="line">    &lt;li&gt;</span><br><span class="line">        &lt;a href=<span class="string">"@link.Url"</span> target=<span class="string">"@link.Target"</span> alt=<span class="string">"@link.Title"</span>&gt;@link.Text&lt;/a&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>====================</p><p><a name="source-code">Source code:</a> <a href="https://github.com/josedbaez/josedbaez.github.io/blob/source/source/files/LinkListFieldSynthesis.cs" target="_blank" rel="noopener">Download here</a></p><hr><p>Please let me know what you think and/or if you can spot any errors.<br><em>/eom</em></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img class=&quot;hero-img&quot; src=&quot;/images/synthesizing.jpg&quot; alt=&quot;Synthesizing&quot;&gt;&lt;/h2&gt;&lt;p&gt;Map strongly typed Link List field type with Synthesis when generating objects…&lt;br&gt;
    
    </summary>
    
      <category term="Sitecore" scheme="http://josedbaez.com/categories/Sitecore/"/>
    
      <category term="Field Types" scheme="http://josedbaez.com/categories/Sitecore/Field-Types/"/>
    
      <category term="Synthesis" scheme="http://josedbaez.com/categories/Sitecore/Field-Types/Synthesis/"/>
    
    
      <category term="linklist" scheme="http://josedbaez.com/tags/linklist/"/>
    
      <category term="fieldtypes" scheme="http://josedbaez.com/tags/fieldtypes/"/>
    
      <category term="synthesis" scheme="http://josedbaez.com/tags/synthesis/"/>
    
  </entry>
  
  <entry>
    <title>Monoco Link List field type in Sitecore 8</title>
    <link href="http://josedbaez.com/2017/03/sitecore8-link-list/"/>
    <id>http://josedbaez.com/2017/03/sitecore8-link-list/</id>
    <published>2017-03-11T00:00:00.000Z</published>
    <updated>2018-03-29T14:12:51.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><img class="hero-img" src="/images/linklist.png" alt="Link list"></h2><p>Update Monoco Link List field type source code so it can be used in Sitecore 8…<br><a id="more"></a></p><p><em>Versions used: Sitecore 8.2 rev. 161221 (8.2 Update-2)</em></p><p>Have you ever wanted to add N number of hyperlinks to an item, but did not want to rely on traversing its children? How cool would it be to have all these links in the same field? Thanks to <a href="http://code.monoco.se/2012/12/a-shiny-new-field-type-linklist" target="_blank" rel="noopener">Monoco’s link list field</a>, we can!. The problem? It was created a while ago and it doesn’t work in Sitecore 8+ versions.</p><p>This post explains how to update the original code so it can be used in Sitecore 8+ versions, adds the text property and amends code so it sets the target item when using internal links. If you just want the code, download <a href="#source-code">Source code here</a></p><p><em>NB: I did this a long time ago under tight deadline and never found time to blog about it; got inspired by a question I recently saw on <a href="http://sitecore.stackexchange.com" target="_blank" rel="noopener">SSE</a> (which I can’t find now). The solution might not be the prettiest code ever, and might have some redundant stuff (which is the reason I never sent a pull request to creator, but it works with minor changes to the original code</em></p><p><strong>Steps:</strong></p><ol><li><p><a href="https://marketplace.sitecore.net/en/Modules/Link_List_Field_Type.aspx" target="_blank" rel="noopener">Download</a> and install the module from the marketplace.<br> If you try to use the field type now, it won’t render properly and will look like this:<br> <img class="" src="/images/broken-link-list.png" alt="Broken Monoco Link List"></p></li><li><p><a href="https://github.com/monoco/Monoco.CMS.FieldTypes" target="_blank" rel="noopener">Download</a> the original code and open the solution/project in visual studio.</p></li><li><p>Update <code>Sitecore.Kernel</code> reference in project.</p></li><li><p>Change target framework to 4.5.2 or later.</p></li><li><p>Delete layout folder. This comes as an example but doesn’t compile properly and it’s not needed.</p></li><li><p>Go to file <code>\Fields\Link.cs</code> and add the following property:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> Text &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br></pre></td></tr></table></figure></li><li><p>Go to file <code>\Fields\LinkListField.cs</code> and make the following changes:</p><ol><li><p>Add these 2 namespace references:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Sitecore.Links;</span><br><span class="line"><span class="keyword">using</span> System.Xml;</span><br></pre></td></tr></table></figure></li><li><p>Add this new function that will get target item for internal links. <em>This should definitely be refactored and re-use code used in <code>GetUrlFromLink(XElement link)</code> as it’s pretty much the same.</em></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> Item <span class="title">GetTargetItemFromLink</span>(<span class="params">XElement link</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (GetElementAttribute(link, <span class="string">"linktype"</span>).ToLowerInvariant())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"internal"</span>:</span><br><span class="line">            <span class="keyword">var</span> id = GetElementAttribute(link, <span class="string">"id"</span>);</span><br><span class="line">            <span class="keyword">if</span> (!String.IsNullOrWhiteSpace(id))</span><br><span class="line">            &#123;</span><br><span class="line">                Sitecore.Data.ID itemId;</span><br><span class="line">                <span class="keyword">if</span> (Sitecore.Data.ID.TryParse(id, <span class="keyword">out</span> itemId))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">var</span> item = Sitecore.Context.Database.GetItem(itemId);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> item ?? <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"media"</span>:</span><br><span class="line">            <span class="keyword">var</span> id2 = GetElementAttribute(link, <span class="string">"id"</span>);</span><br><span class="line">            <span class="keyword">if</span> (!String.IsNullOrWhiteSpace(id2))</span><br><span class="line">            &#123;</span><br><span class="line">                Sitecore.Data.ID mediaId;</span><br><span class="line">                <span class="keyword">if</span> (Sitecore.Data.ID.TryParse(id2, <span class="keyword">out</span> mediaId))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">var</span> item = Sitecore.Context.Database.GetItem(mediaId);</span><br><span class="line">                    <span class="keyword">if</span> (item == <span class="literal">null</span>)</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                    <span class="keyword">var</span> mediaItem = (MediaItem)item;</span><br><span class="line">                    <span class="keyword">return</span> mediaItem;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">default</span>: <span class="comment">// all other links are considered external.</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Modify method <code>ParseLinks()</code> so <code>_links</code> variable sets <code>Text</code> and <code>TargetItem</code>. It should look like this:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">_links = <span class="keyword">from</span> link <span class="keyword">in</span> document.Descendants(<span class="string">"link"</span>)</span><br><span class="line">   <span class="keyword">select</span> <span class="keyword">new</span> Link</span><br><span class="line">   &#123;</span><br><span class="line">       Target = GetElementAttribute(link, <span class="string">"target"</span>),</span><br><span class="line">       Title = GetElementAttribute(link, <span class="string">"title"</span>),</span><br><span class="line">       Text = GetElementAttribute(link, <span class="string">"text"</span>),</span><br><span class="line">       LinkType = GetElementAttribute(link, <span class="string">"linktype"</span>),</span><br><span class="line">       Url = GetUrlFromLink(link),</span><br><span class="line">       TargetItem = GetTargetItemFromLink(link)</span><br><span class="line">   &#125;;</span><br></pre></td></tr></table></figure></li></ol></li><li><p>Go to file <code>\sitecore modules\Shell\FieldTypes\LinkListField.cs</code> and make the following changes:</p><ol><li><p>Add the following namespace reference:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Sitecore.Web;</span><br></pre></td></tr></table></figure></li><li><p>In method <code>EditLink(ClientPipelineArgs args)</code>, change the <code>else</code> clause to:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Show the dialog using ShowModalDialog.</span></span><br><span class="line"><span class="keyword">var</span> urlString = <span class="keyword">new</span> UrlString(args.Parameters[<span class="string">"url"</span>]);</span><br><span class="line">UrlHandle urlHandle = <span class="keyword">new</span> UrlHandle();</span><br><span class="line">urlHandle[<span class="string">"ro"</span>] = Source;</span><br><span class="line">urlHandle[<span class="string">"db"</span>] = Client.ContentDatabase.Name;</span><br><span class="line">urlHandle[<span class="string">"va"</span>] = node.OuterXml;</span><br><span class="line">urlHandle.Add(urlString);</span><br><span class="line">urlString.Append(<span class="string">"ro"</span>, Source);</span><br><span class="line">urlString.Append(<span class="string">"sc_content"</span>, WebUtil.GetQueryString(<span class="string">"sc_content"</span>));</span><br><span class="line">Sitecore.Context.ClientPage.ClientResponse.ShowModalDialog(urlString.ToString(), <span class="literal">true</span>);</span><br><span class="line">args.WaitForPostBack();</span><br></pre></td></tr></table></figure></li><li><p>In method <code>InsertLink(ClientPipelineArgs args)</code>, change lines 156-158 to:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Sitecore.Context.ClientPage.ClientResponse.Eval(<span class="keyword">string</span>.Concat(<span class="keyword">new</span> <span class="keyword">string</span>[]</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"scContent.linklistInsertLink('"</span>, ID, <span class="string">"', &#123;text:'"</span>, selectText, <span class="string">"'&#125;)"</span></span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure></li><li><p>And the <code>else</code> clause right below to:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> urlString = <span class="keyword">new</span> UrlString(args.Parameters[<span class="string">"url"</span>]);</span><br><span class="line">UrlHandle urlHandle = <span class="keyword">new</span> UrlHandle();</span><br><span class="line">urlHandle[<span class="string">"ro"</span>] = Source;</span><br><span class="line">urlHandle[<span class="string">"db"</span>] = Client.ContentDatabase.Name;</span><br><span class="line">urlHandle[<span class="string">"va"</span>] = <span class="keyword">this</span>.XmlValue.ToString();</span><br><span class="line">urlHandle.Add(urlString);</span><br><span class="line">urlString.Append(<span class="string">"ro"</span>, Source);</span><br><span class="line">urlString.Append(<span class="string">"sc_content"</span>, WebUtil.GetQueryString(<span class="string">"sc_content"</span>));</span><br><span class="line">Sitecore.Context.ClientPage.ClientResponse.ShowModalDialog(urlString.ToString(), <span class="literal">true</span>);</span><br><span class="line">args.WaitForPostBack();</span><br></pre></td></tr></table></figure></li><li><p>Lastly, the function <code>string GetSelectText(XmlNode node)</code> to the following:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">string</span> <span class="title">GetSelectText</span>(<span class="params">XmlNode node</span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">      <span class="keyword">string</span> attr = GetAttribute(node, <span class="string">"text"</span>);</span><br><span class="line">      <span class="keyword">var</span> linkType = GetLinkType(node);</span><br><span class="line">      <span class="keyword">string</span> url = <span class="keyword">string</span>.Empty;</span><br><span class="line">      <span class="keyword">if</span> (linkType.ToString().Equals(<span class="string">"internal"</span>) || linkType.ToString().Equals(<span class="string">"media"</span>))</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">string</span> itemId = GetAttribute(node, <span class="string">"id"</span>);</span><br><span class="line">          <span class="keyword">if</span> (!<span class="keyword">string</span>.IsNullOrEmpty(itemId))</span><br><span class="line">          &#123;</span><br><span class="line">              <span class="keyword">var</span> item = Client.ContentDatabase.GetItem(<span class="keyword">new</span> Sitecore.Data.ID(itemId));</span><br><span class="line">              <span class="keyword">if</span> (item != <span class="literal">null</span>)</span><br><span class="line">              url = item.Paths.ContentPath;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">var</span> urlObj = GetLinkUrl(node);</span><br><span class="line">          <span class="keyword">if</span> (urlObj != <span class="literal">null</span>)</span><br><span class="line">          url = urlObj.ToString();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">string</span>.Format(<span class="string">"&#123;0&#125; (&#123;1&#125;: &#123;2&#125;)"</span>, attr, linkType, url);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li><li><p>And that’s it. Compile your code and copy all relevant files to your website folder. The link list field should now look like this:<br><img class="hero-img" src="/images/working-link-list.png" alt="Broken Monoco Link List"></p></li></ol><p>====================</p><p><a name="source-code">Source code:</a> Do not forget to update the reference to <code>Sitecore.Kernel</code>. <a href="https://github.com/josedbaez/josedbaez.github.io/raw/source/source/files/Monoco.CMS.FieldTypes.zip" target="_blank" rel="noopener">Download here</a></p><hr><p>Please let me know what you think and/or if you can spot any errors.<br><em>/eom</em></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img class=&quot;hero-img&quot; src=&quot;/images/linklist.png&quot; alt=&quot;Link list&quot;&gt;&lt;/h2&gt;&lt;p&gt;Update Monoco Link List field type source code so it can be used in Sitecore 8…&lt;br&gt;
    
    </summary>
    
      <category term="Sitecore" scheme="http://josedbaez.com/categories/Sitecore/"/>
    
      <category term="Field Types" scheme="http://josedbaez.com/categories/Sitecore/Field-Types/"/>
    
    
      <category term="linklist" scheme="http://josedbaez.com/tags/linklist/"/>
    
      <category term="fieldtypes" scheme="http://josedbaez.com/tags/fieldtypes/"/>
    
  </entry>
  
  <entry>
    <title>CRM connector not removing contacts from marketing lists</title>
    <link href="http://josedbaez.com/2017/03/sitecore-dynamics-connector-reset-error/"/>
    <id>http://josedbaez.com/2017/03/sitecore-dynamics-connector-reset-error/</id>
    <published>2017-03-02T00:00:00.000Z</published>
    <updated>2018-02-06T23:08:23.708Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><img class="hero-img" src="/images/sitecore-dynamics-bug.jpg" alt="Sitecore Microsoft Dynamics CRM"></h2><p>Fix issue with CRM connector not removing contacts from marketing lists after syncing…<br><a id="more"></a></p><p><em>Versions used: Sitecore 8.1 rev. 151207 (Update-1). Dynamics CRM Connect 1.1</em></p><p>When <a href="http://integrationsdn.sitecore.net/DynamicsCrmConnect/v1.1/pipeline-batches/crm-marketinglist-sync/overview.html" target="_blank" rel="noopener">syncing marketing lists from CRM</a>, you need the connector to add users to marketing lists but also to <a href="http://integrationsdn.sitecore.net/DynamicsCrmConnect/v1.1/pipeline-batches/crm-marketinglist-sync/about-reset-marketing-lists.html" target="_blank" rel="noopener">remove them from lists</a> they do not belong to anymore.</p><p>The removal of contacts from marketing lists happens in pipeline <code>Reset Existing xDB Contacts Pipeline</code>, but it does NOT WORK :(, hence contacts stay in a marketing list forever.</p><p>We contacted sitecore support about this and it was flagged as a bug (ref no. 139990) which is luckily easy to fix.</p><p><strong>Solution</strong></p><p>Go to item <code>/sitecore/system/Data Exchange/{Your CRM Tenant}/Value Mapping Sets/Clear CRM List Membership on xDB Contact/Marketing Lists</code> and untick field <code>Ignore null values</code>.</p><hr><p>Please let me know what you think and/or if you can spot any errors.<br><em>/eom</em></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img class=&quot;hero-img&quot; src=&quot;/images/sitecore-dynamics-bug.jpg&quot; alt=&quot;Sitecore Microsoft Dynamics CRM&quot;&gt;&lt;/h2&gt;&lt;p&gt;Fix issue with CRM connector not removing contacts from marketing lists after syncing…&lt;br&gt;
    
    </summary>
    
      <category term="Sitecore" scheme="http://josedbaez.com/categories/Sitecore/"/>
    
      <category term="CRM" scheme="http://josedbaez.com/categories/Sitecore/CRM/"/>
    
    
      <category term="xdb" scheme="http://josedbaez.com/tags/xdb/"/>
    
      <category term="bug" scheme="http://josedbaez.com/tags/bug/"/>
    
      <category term="dynamics" scheme="http://josedbaez.com/tags/dynamics/"/>
    
  </entry>
  
</feed>
